@startuml

class Variable {
    - name : string
    - domain : set<int>
    - assignedValue : int
    + assign(value : int) : void
    + unassign() : void
    + reduceDomain(value : int) : void
    + restoreDomain() : void
}

abstract class Constraint {
    + isSatisfied(assignments : unordered_map<string, int>) : bool
    + getScope() : vector<unique_ptr<Variable>>
}

class CSP {
    - variables : vector<Variable>
    - constraints : vector<Constraint>
    + addVariable(var : Variable) : void
    + addConstraint(constraint : Constraint) : void
    + assignVariable(var : Variable&, value : int) void
}

class Solver {
    - csp : CSP&
    + backtrackingSearch() : bool
    + assignVariable(var : Variable, value : int) : bool
    + unassignVariable(var : Variable) : void
}

CSP "1..*" --> "1..*" Variable : contains
CSP "1..*" --> "1..*" Constraint : contains
Solver --> CSP : uses
Constraint --> Variable : references

@enduml
